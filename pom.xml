<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <groupId>my.app</groupId>
  <artifactId>MyTestNG</artifactId>
  <packaging>jar</packaging>
  <version>1.0-SNAPSHOT</version>
  <name>MyTestNG</name>
  <url>http://maven.apache.org</url>

  <properties>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <maven.compiler.source>1.8</maven.compiler.source>
    <maven.compiler.target>1.8</maven.compiler.target>
    <jdk.version>1.8</jdk.version>
    <suiteXmlFile>${basedir}/testNGSuite.xml</suiteXmlFile>
    <skipTests>true</skipTests>
  </properties>
  
  <repositories>
	<repository>
		<id>jcenter</id>
		<name>bintray</name>
		<url>http://jcenter.bintray.com</url>
	</repository>
</repositories>
 

 
  <dependencies>
    <dependency>
      <groupId>junit</groupId>
      <artifactId>junit</artifactId>
      <version>4.12</version>
      <scope>test</scope>
    </dependency>
	<dependency>
		<groupId>org.testng</groupId>
		<artifactId>testng</artifactId>
		<version>6.10</version>
<!-- 		<scope>test</scope> -->
	</dependency>
	<!-- https://mvnrepository.com/artifact/log4j/log4j -->
	<dependency>
    	<groupId>log4j</groupId>
    	<artifactId>log4j</artifactId>
    	<version>1.2.17</version>
	</dependency>
	<dependency>
		<groupId>org.mockito</groupId>
		<artifactId>mockito-all</artifactId>
		<version>1.10.19</version>
		<scope>test</scope>
	</dependency>
		<dependency>
		<groupId>com.google.inject</groupId>
		<artifactId>guice</artifactId>
		<version>4.2.0</version>
	</dependency>
	
  </dependencies>
  
  <build>
  <plugins>
	<plugin>

		<groupId>org.apache.maven.plugins</groupId>
		<artifactId>maven-compiler-plugin</artifactId>
		<version>2.3.2</version>
		<configuration>
			<source>${jdk.version}</source>
			<target>${jdk.version}</target>
		</configuration>
	</plugin>
  	<plugin>
		<groupId>org.codehaus.mojo</groupId>
		<artifactId>exec-maven-plugin</artifactId>
		<version>1.3.2</version>
		<configuration>
			<executable>java</executable>
			<arguments>
				<argument>-classpath</argument>
					<classpath/>
				<argument>my.app.App</argument>
			</arguments>
		</configuration>
	</plugin>
<!-- 	For maven based project, the popular approach to run the tests is using maven-surefire-plugin which is used by-default
	whenever test goal is executed [ with 'mvn test' / 'mvn install' e.g.]. 
	Additionally, surefire-plugin provides option to include the conditions(defining group, excluding groups, thread-count,
	parallelism and many more directly with plugin configuration in pom.xml. So you have choice where to put those information
	(in pom.xml or in suite testng.xml). -->
	<plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
                <version>2.18.1</version>
                <configuration>
<!--                 <suiteXmlFiles> <suiteXmlFile>${basedir}/testng.xml</suiteXmlFile> </suiteXmlFiles> -->
<!--                <suiteXmlFiles>
                        <suiteXmlFile>src/test/resources/testng.xml</suiteXmlFile>
                    </suiteXmlFiles> -->
<!--                 c:\Temp>java org.testng.TestNG -groups regressiontest - testname AllTests -->
<!--                 <groups>regressiontest</groups> -->
<!--                 <trimStackTrace>false</trimStackT;race> -->
<!--                 <suitename>AllTests</suitename> -->

					<suiteXmlFiles>
						<suiteXmlFile>${suiteXmlFile}</suiteXmlFile>
					</suiteXmlFiles>
<!-- 				Build with '-DskipTests=true' to bypass test execution @ build time Default: false -->
					<skipTests>${skipTests}</skipTests>
					<testFailureIgnore>true</testFailureIgnore>
                </configuration>
     </plugin>
  </plugins>
  <resources>
	<!-- <resource> <directory>src/test/resources</directory> </resource> -->
  </resources>
  </build>
</project>
